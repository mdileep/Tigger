/*************************************************************************
**
**    Client that uses Automation's vtbl-binding.
**    Controls the server.
**
**    hellctrl.cpp
**
**
**     Written by Microsoft Product Support Services, Windows Developer Support
**    (c) Copyright Microsoft Corp. 1995 All Rights Reserved
**
*************************************************************************/
#include <windows.h>
#include <stdio.h>
#include <initguid.h>   
#include "IVtblServer.h"   // IVtblServer.h is copied from the server's directory. It was
                           // generated by mktyplib

/*
 * Main
 *
 * Purpose:
 *  Main entry point of application.
 *  Creates the server, obtains IVtblServer custom interface and 
 *  calls the IVtblServer::put_Message & IVtblServer::DisplayMessage methods.
 *  Pauses for 10 seconds before shutting down. 
 *
 */
int _cdecl main(int argc, char *argv[])
{
    IVtblServer * pserver = NULL;
    LPUNKNOWN punk = NULL;
    HRESULT hr;
    SAFEARRAY FAR* psa = NULL;
    BSTR bstr = NULL;

    if(OleInitialize(NULL) != NOERROR)
    {
        printf("OleInitialize failed\n");
        return -1;         
    }

    //**** Create server object and get IVtblServer custom interface
    hr = CoCreateInstance(CLSID_VtblServer, NULL, CLSCTX_SERVER, 
                     IID_IUnknown, (void FAR* FAR*)&punk);
    if (FAILED(hr))  
    {
        printf("CoCreateInstance failed. HRESULT = %lx\n", hr);  
        goto error;
    }             
    hr = punk->QueryInterface(IID_IVtblServer,  (void FAR* FAR*)&pserver);   
    if (FAILED(hr))  
    {
        printf("QueryInterface(IID_IVtblServer) failed. HRESULT = %lx\n", hr);
        goto error;
    }
    punk->Release();


    //**** Invoke IVtblServer.put_Message method. 32 bit OLE uses Unicode strings.
    // Strings must be passed as BSTRs for interfaces that are marshaled by the OLE
    // Automation marshaler.
    bstr = SysAllocString(OLESTR("Hello Universe"));
    hr = pserver->put_Message(bstr);
    if (FAILED(hr))
    {
        printf("IVtblServer.put_Message failed. HRESULT = %lx\n", hr);
        goto error;
    }
    SysFreeString(bstr);  // Caller is responsible for freeing parameters and return values.


    //**** Invoke the IVtblServer.DisplayMessage method, DisplayMessage takes a 
    // COORD structure as a parameter. A SAFEARRAY(unsigned char) is used to pass 
    // this structure because the OLE Automation marshaler cannot understand structures.
    SAFEARRAYBOUND sabound[1];
    COORD coord;
    
    // COORD structure to be passed
    coord.X = 5;
    coord.Y = 3;
    
    // Create safearray of unsigned char in which the COORD structure will be passed.
    // The size of the array is the size of the structure.
    sabound[0].cElements = sizeof(COORD);
    sabound[0].lLbound = 0;    
    psa = SafeArrayCreate(VT_UI1, 1, sabound);
    
    // Copy COORD structure into array    
    unsigned char *pc;   
    SafeArrayAccessData(psa, (void **)&pc);  
    memcpy(pc, &coord, sizeof(COORD));
    SafeArrayUnaccessData(psa);   
        
    // Call DisplayMessageto display the message 7 times starting at (5, 3)
    hr = pserver->DisplayMessage(psa, 7);
    if (FAILED(hr))
    {
        printf("IVtblServer.DisplayMessage failed. HRESULT = %lx\n", hr);
        goto error;
    }
    // Caller is responsible for freeing parameters and return values.
    SafeArrayDestroy(psa);

    printf("Done controlling server. Pausing for 10 seconds\n");
    Sleep(10000 ); // 10000 msec = 10 sec

    //**** Release the server. If this is the last reference on the server, the server will shutdown.
    pserver->Release();
   
    OleUninitialize();
    return 0;

error:
    if (punk) punk->Release();
    if (pserver) pserver->Release();
    if (psa) SafeArrayDestroy(psa);
    if (bstr) SysFreeString(bstr);
    printf("Pausing for 10 seconds\n");
    Sleep(10000); // 10000 msec = 10 sec
    OleUninitialize();
    return -1;          
}
   
