{\rtf1\ansi \deff7\deflang1033{\fonttbl{\f0\froman\fcharset0\fprq2 Tms Rmn{\*\falt Times New Roman};}{\f1\froman\fcharset2\fprq2 Symbol;}{\f2\fswiss\fcharset0\fprq2 Helv{\*\falt Helvetica};}
{\f3\fmodern\fcharset0\fprq1 Courier;}{\f4\froman\fcharset0\fprq2 Times New Roman;}{\f5\fswiss\fcharset0\fprq2 Arial;}{\f6\froman\fcharset0\fprq2 MS Serif;}{\f7\fswiss\fcharset0\fprq2 MS Sans Serif;}{\f8\froman\fcharset0\fprq2 Times;}
{\f9\fswiss\fcharset0\fprq2 Helvetica{\*\falt Arial};}{\f10\fswiss\fcharset0\fprq2 System;}{\f11\fmodern\fcharset0\fprq1 Courier New;}{\f12\froman\fcharset0\fprq2 New York;}{\f13\fswiss\fcharset0\fprq2 Geneva;}{\f14\fswiss\fcharset0\fprq2 AvantGarde;}
{\f15\froman\fcharset0\fprq2 ITC Bookman;}{\f16\fswiss\fcharset0\fprq2 Helvetica-Narrow;}{\f17\froman\fcharset0\fprq2 NewCenturySchlbk;}{\f18\froman\fcharset0\fprq2 Palatino;}{\f19\froman\fcharset0\fprq2 ZapfChancery;}
{\f20\fdecor\fcharset2\fprq2 ZapfDingbats;}{\f21\fmodern\fcharset0\fprq1 Lucida Console;}{\f22\fnil\fcharset0\fprq2 Kindel;}{\f23\fnil\fcharset0\fprq2 Microsoft Logo;}{\f24\fnil\fcharset2\fprq2 Wingdings;}
{\f25\fmodern\fcharset0\fprq1 Lucida Sans Typewriter;}{\f26\fmodern\fcharset2\fprq1 MS LineDraw;}{\f27\fswiss\fcharset2\fprq2 Bookshelf Symbol 1;}{\f28\fswiss\fcharset2\fprq2 Bookshelf Symbol 2;}{\f29\froman\fcharset2\fprq2 Bookshelf Symbol 3;}
{\f30\fswiss\fcharset0\fprq2 Haettenschweiler;}{\f31\froman\fcharset2\fprq2 Wingdings 3;}{\f32\fscript\fcharset0\fprq2 Comic Sans MS;}{\f33\fswiss\fcharset0\fprq2 Copperplate Gothic Bold;}{\f34\fswiss\fcharset0\fprq2 Copperplate Gothic Light;}
{\f35\fdecor\fcharset0\fprq2 Flexure;}{\f36\froman\fcharset0\fprq2 Goudy Old Style;}{\f37\froman\fcharset0\fprq2 Goudy Stout;}{\f38\fdecor\fcharset0\fprq2 Harrington;}{\f39\fswiss\fcharset0\fprq2 Impact;}{\f40\fdecor\fcharset0\fprq2 Imprint MT Shadow;}
{\f41\fscript\fcharset0\fprq2 Lucida Calligraphy;}{\f42\fscript\fcharset0\fprq2 Lucida Handwriting;}{\f43\froman\fcharset0\fprq2 Rockwell;}{\f44\froman\fcharset0\fprq2 Rockwell Condensed;}{\f45\froman\fcharset0\fprq2 Rockwell Extra Bold;}
{\f46\fswiss\fcharset0\fprq2 Maiandra GD;}{\f47\fnil\fcharset0\fprq2 Rockwell Condensed Bold;}{\f48\froman\fcharset2\fprq2 Wingdings 2;}{\f49\fswiss\fcharset0\fprq2 Abadi MT Condensed Extra Bold;}{\f50\fswiss\fcharset0\fprq2 Abadi MT Condensed Light;}
{\f51\fdecor\fcharset0\fprq2 Algerian;}{\f52\fswiss\fcharset0\fprq2 Arial Black;}{\f53\fswiss\fcharset0\fprq2 Arial Rounded MT Bold;}{\f54\fdecor\fcharset0\fprq2 Bauhaus 93;}{\f55\froman\fcharset0\fprq2 Bookman Old Style;}
{\f56\fdecor\fcharset0\fprq2 Braggadocio;}{\f57\fswiss\fcharset0\fprq2 Britannic Bold;}{\f58\fscript\fcharset0\fprq2 Brush Script MT;}{\f59\froman\fcharset0\fprq2 Calisto MT;}{\f60\fdecor\fcharset0\fprq2 Colonna MT;}
{\f61\fdecor\fcharset0\fprq2 Desdemona;}{\f62\froman\fcharset0\fprq2 Engravers MT;}{\f63\fswiss\fcharset0\fprq2 Eurostile;}{\f64\froman\fcharset0\fprq2 Felix Titling;}{\f65\fscript\fcharset0\fprq2 Forte;}{\f66\froman\fcharset0\fprq2 Footlight MT Light;}
{\f67\fswiss\fcharset0\fprq2 Gill Sans MT Ext Condensed Bold;}{\f68\fswiss\fcharset0\fprq2 Century Gothic;}{\f69\fscript\fcharset0\fprq2 Gradl;}{\f70\fdecor\fcharset0\fprq2 Kino MT;}{\f71\froman\fcharset0\fprq2 Wide Latin;}
{\f72\fnil\fcharset0\fprq2 Lucida Blackletter;}{\f73\fswiss\fcharset0\fprq2 Lucida Sans;}{\f74\fscript\fcharset0\fprq2 Matura MT Script Capitals;}{\f75\fnil\fcharset0\fprq2 Mead Bold;}{\f76\fnil\fcharset0\fprq2 Mercurius Script MT Bold;}
{\f77\fscript\fcharset0\fprq2 Mistral;}{\f78\fscript\fcharset0\fprq2 Monotype Corsiva;}{\f79\fnil\fcharset2\fprq2 Monotype Sorts;}{\f80\fswiss\fcharset0\fprq2 Placard Condensed;}{\f81\fdecor\fcharset0\fprq2 Playbill;}{\f82\fdecor\fcharset0\fprq2 Stencil;}
{\f83\froman\fcharset0\fprq2 Modern No. 20;}{\f84\froman\fcharset255\fprq2 Roman;}{\f85\fscript\fcharset255\fprq2 Script;}{\f86\fmodern\fcharset255\fprq2 Modern;}{\f87\froman\fcharset0\fprq0 Small Fonts;}{\f88\fswiss\fcharset0\fprq1 MS Dialog;}
{\f89\fmodern\fcharset0\fprq1 Fixedsys;}{\f90\fmodern\fcharset255\fprq1 Terminal;}{\f91\fswiss\fcharset0\fprq2 MS Dialog Light;}{\f92\fswiss\fcharset0\fprq2 MS SystemEx;}{\f93\fnil\fcharset2\fprq2 Marlett;}{\f94\fnil\fcharset0\fprq2 Archer;}
{\f95\fswiss\fcharset0\fprq2 Arial Narrow;}{\f96\fswiss\fcharset0\fprq2 Arial Super;}{\f97\fnil\fcharset0\fprq2 Arquitectura;}{\f98\fnil\fcharset0\fprq2 Balloon;}{\f99\froman\fcharset0\fprq2 Book Antiqua;}{\f100\froman\fcharset0\fprq2 Century Schoolbook;}
{\f101\fnil\fcharset0\fprq2 DeStijl Expert;}{\f102\fnil\fcharset0\fprq2 DeStijl;}{\f103\fnil\fcharset0\fprq2 Digital;}{\f104\fnil\fcharset0\fprq2 Eurobold;}{\f105\fnil\fcharset0\fprq2 Eurostile Extended;}{\f106\froman\fcharset0\fprq2 FC-FatFace;}
{\f107\froman\fcharset0\fprq2 FC-Lynton;}{\f108\froman\fcharset0\fprq2 FC-RomanShaded;}{\f109\froman\fcharset0\fprq2 FC-RomanSolid;}{\f110\froman\fcharset0\fprq2 FC-RomanStylus;}{\f111\fswiss\fcharset0\fprq2 FC-Venus;}
{\f112\fswiss\fcharset0\fprq2 FC-VenusCondensed;}{\f113\fnil\fcharset2\fprq2 Fences;}{\f114\fnil\fcharset0\fprq2 Freedom;}{\f115\fnil\fcharset0\fprq2 LED;}{\f116\froman\fcharset0\fprq2 Lucida Bright;}
{\f117\fnil\fcharset2\fprq2 Lucida Bright Math Extension;}{\f118\fnil\fcharset2\fprq2 Lucida Bright Math Italic;}{\f119\fnil\fcharset2\fprq2 Lucida Bright Math Symbol;}{\f120\froman\fcharset0\fprq2 Lucida Fax;}
{\f121\fnil\fcharset0\fprq2 Lucida Sans Unicode;}{\f122\fswiss\fcharset0\fprq2 Lucida Sans Unicode Regular;}{\f123\froman\fcharset2\fprq2 MT Extra;}{\f124\fscript\fcharset0\fprq2 Present;}{\f125\fnil\fcharset0\fprq2 QTBlackForest;}
{\f126\fnil\fcharset0\fprq2 QTCaslanOpen;}{\f127\fnil\fcharset0\fprq2 QTFlorencia;}{\f128\fnil\fcharset0\fprq2 QTGhoulFace;}{\f129\fnil\fcharset0\fprq2 QTMilitary;}{\f130\fnil\fcharset0\fprq2 Stop;}{\f131\fnil\fcharset0\fprq2 Toons;}
{\f132\fscript\fcharset0\fprq2 Vivaldi;}{\f133\fnil\fcharset0\fprq2 Wendy;}{\f134\fmodern\fcharset0\fprq1 Sans MP;}{\f135\fswiss\fcharset0\fprq2 Univers (W1){\*\falt Arial};}{\f136\froman\fcharset0\fprq2 CG Times (W1){\*\falt Times New Roman};}
{\f137\fswiss\fcharset0\fprq0 chicago{\*\falt Arial};}{\f138\froman\fcharset0\fprq0 Times Roman;}{\f139\fmodern\fcharset0\fprq0 LinePrinter;}{\f140\fmodern\fcharset0\fprq1 Courier Bold;}{\f141\fmodern\fcharset0\fprq1 Courier Italic;}
{\f142\froman\fcharset0\fprq2 CG Times;}{\f143\fswiss\fcharset0\fprq2 Univers;}{\f144\fswiss\fcharset0\fprq2 Univers Condensed;}{\f145\fdecor\fcharset2\fprq2 ITC Zapf Dingbats (D1);}{\f146\fdecor\fcharset2\fprq2 ITC Zapf Dingbats (D2);}
{\f147\fdecor\fcharset2\fprq2 ITC Zapf Dingbats (D3);}{\f148\fdecor\fcharset2\fprq2 ITC Zapf Dingbats (DS);}{\f149\fdecor\fcharset2\fprq2 ITC Zapf Dingbats (DV);}{\f150\fnil\fcharset0\fprq2 Pica10 BT;}{\f151\fnil\fcharset0\fprq2 UnivrstyRoman BT;}
{\f152\fmodern\fcharset0\fprq0 Monaco;}{\f153\fnil\fcharset0\fprq0 BI Letter Gothic BoldSlanted;}{\f154\fnil\fcharset0\fprq0 I Letter Gothic Slanted;}{\f155\fnil\fcharset0\fprq0 CB Helvetica Condensed Bold;}
{\f156\fnil\fcharset0\fprq0 CLB Helvetica Condensed Black;}{\f157\fnil\fcharset0\fprq0 CBI Helvetica Condensed BoldObl;}{\f158\fnil\fcharset0\fprq0 CL Helvetica Condensed Light;}{\f159\fnil\fcharset0\fprq0 CLBI Helvetica Condensed BlackO;}
{\f160\fnil\fcharset0\fprq0 CLI Helvetica Condensed LightOb;}{\f161\fmodern\fcharset0\fprq0 Letter Gothic;}{\f162\fnil\fcharset0\fprq0 B Letter Gothic Bold;}{\f163\fnil\fcharset0\fprq0 C Helvetica Condensed;}
{\f164\fnil\fcharset0\fprq0 CI Helvetica Condensed Oblique;}{\f165\fnil\fcharset0\fprq0 MS San Serif;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;
\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\li120\sa60\sl-220\slmult1\nowidctlpar \f7\fs20 \snext0 Normal;}{\s1\sb60\sl-240\slmult1\keepn\nowidctlpar \b\f2 \sbasedon0\snext9 heading 1;}{\s2\sb60\sa60\sl-240\slmult1\nowidctlpar \b\f7\fs20 \sbasedon1\snext0 heading 2;}{
\s3\li120\sb60\sa60\sl-240\slmult1\nowidctlpar \b\f2\fs20 \sbasedon1\snext0 heading 3;}{\s4\fi-245\li360\sb120\sa60\sl-240\slmult1\nowidctlpar \f7\fs20 \sbasedon2\snext4 heading 4;}{\s5\sb60\sa60\sl-240\slmult1\nowidctlpar \b\f7\fs20 \sbasedon2\snext0 
heading 5;}{\s6\sb40\sl-238\slmult1\keepn\nowidctlpar\pvpara\posy0\absh255\dxfrtext130\dfrmtxtx130\dfrmtxty0 \b\f2\fs21 \sbasedon1\snext15 heading 6;}{\s7\li720\sb80\sl-240\slmult1\nowidctlpar \i\f7\fs20 \sbasedon0\snext16 heading 7;}{
\s8\li720\sb80\sl-240\slmult1\nowidctlpar \i\f7\fs20 \sbasedon0\snext16 heading 8;}{\s9\li115\sa20\sl-240\slmult1\keepn\nowidctlpar\tx1440\tx2880 \f7\fs16 \sbasedon1\snext0 heading 9;}{\*\cs10 \additive Default Paragraph Font;}{
\s15\sb40\sa160\sl-220\slmult1\nowidctlpar \f5\fs21 \sbasedon0\snext0 H6p;}{\s16\li440\sa60\sl-220\slmult1\nowidctlpar \f7\fs20 \sbasedon0\snext16 Normal Indent;}{\s17\fi-300\li420\ri140\sb100\sl-210\slmult1\nowidctlpar\tx140\tx420 \f95\fs19 \snext17 
*Cbx;}{\s18\fi-300\li420\ri140\sb100\sa100\sl-210\slmult1\nowidctlpar\tx140\tx420 \f95\fs19 \sbasedon17\snext0 *Cbxe;}{\s19\qc\fi-245\li360\sl-360\slmult1\keepn\nowidctlpar\box\brdrs\brdrw15\brsp20\brdrcf8 
\pvpara\phpg\absh-390\absw1460\dxfrtext220\dfrmtxtx220\dfrmtxty0 \shading6000\cfpat2 \f95\cf8\up4 \sbasedon4\snext4 *hb1;}{\s20\ri120\sa60\sl-360\slmult1\keepn\nowidctlpar\box\brdrs\brdrw15\brsp80\brdrcf8 \pvpara\phmrg\posxr\posy0\absh-390 
\shading6000\cfpat2 \b\f95\cf8\up10 \sbasedon0\snext0 *hb2;}{\*\cs21 \additive\cf11 \sbasedon10 annotation reference;}{\s22\li120\sa60\sl-220\slmult1\nowidctlpar \f7\cf11 \sbasedon0\snext22 annotation text;}{
\s23\li115\sb120\sa120\nowidctlpar\tx120\tx480\tx840 \f7\fs20 \sbasedon0\snext0 Art;}{\s24\sa120\keepn\nowidctlpar\tx120\tx480\tx840\tqr\tx1560\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty0 \f7\fs20 \sbasedon23\snext0 ArtSd;}{
\s25\li120\sa240\sl-220\slmult1\nowidctlpar\tx120\tx480\tx840 \b\f7\fs20 \sbasedon0\snext0 Cap;}{\s26\li120\sl-220\slmult1\nowidctlpar\tx120\tx480\tx840\tqr\tx1560\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty0 \b\f7\fs20 \sbasedon25\snext0 
CapSd;}{\s27\sb120\keepn\nowidctlpar \b\f7\fs28 \sbasedon1\snext0 Ch;}{\s28\li-1800\sa280\sl-240\slmult1\keepn\nowidctlpar \caps\f4\expnd24\expndtw120 \snext27 Cn;}{\s29\li440\sa80\sl-220\slmult1\nowidctlpar \f7\fs20 \sbasedon0\snext30 Def1;}{
\s30\li120\sb20\sa20\sl-220\slmult1\nowidctlpar \f7\fs20 \sbasedon0\snext29 Term1;}{\s31\li560\sa80\sl-220\slmult1\nowidctlpar \f7\fs20 \sbasedon29\snext0 Def2;}{\s32\sb60\sa60\sl-240\slmult1\nowidctlpar \b\f7\fs20 \sbasedon2\snext33 Erm;}{
\s33\li120\sa60\sl-220\slmult1\nowidctlpar \f7\fs20 \sbasedon0\snext33 Erp;}{\s34\sb60\sa60\sl-240\slmult1\nowidctlpar\tx600 \b\f7\fs20 \sbasedon32\snext33 Ermn;}{\s35\li120\sl-240\slmult1
\keep\nowidctlpar\tx480\tx840\tx1200\tx1560\tx1920\tx2280\tx2640\tx3000 \f11\fs20 \snext35 Ex;}{\s36\li280\sl-240\slmult1
\keep\nowidctlpar\tx480\tx670\tx840\tx1060\tx1200\tx1450\tx1840\tx1920\tx2230\tx2280\tx2620\tx3010\tx3400\tx3790\tx4180\tx4570\tx4960\tx5350\tx5740\tx6130\tx6520\tx6910 \f11\fs20 \sbasedon35\snext36 Exl;}{\s37\li560\sl-240\slmult1
\keep\nowidctlpar\tx480\tx840\tx950\tx1200\tx1340\tx1730\tx1920\tx2120\tx2280\tx2510\tx2900\tx3290\tx3680\tx4070\tx4460\tx4850\tx5240\tx5630\tx6020\tx6410\tx6800 \f11\fs20 \sbasedon36\snext37 Exl2;}{\s38\li-1800\sl-240\slmult1
\keep\nowidctlpar\tx-1410\tx-1020\tx-630\tx-240\tx150\tx480\tx540\tx840\tx930\tx1200\tx1320\tx1710\tx1920\tx2100\tx2280\tx2490\tx2640\tx2880\tx3000\tx3270\tx3660\tx4050\tx4440\tx4830\tx5220\tx5610\tx6000\tx6390\tx6780 \f11\fs20 \sbasedon35\snext38 Exw;}{
\s39\fi-1800\li1800\sl-140\slmult1\nowidctlpar\tqc\tx4320\tqr\tx8640 \f4\fs10 \sbasedon0\snext39 footer;}{\s40\li120\sa60\sl-220\slmult1\nowidctlpar\tqc\tx4320\tqr\tx8640 \b\f5\fs20 \sbasedon0\snext40 header;}{\s41\li-1770\ri30\sb50\sl-80\slmult1
\nowidctlpar\brdrt\brdrs\brdrw15\brdrcf2 \f4\fs12 \snext0 header rule;}{\s42\sb60\sl-240\slmult1\keepn\nowidctlpar \b\f2 \sbasedon1\snext0 Hn1;}{\s43\sb60\sa60\sl-240\slmult1\nowidctlpar \b\f7\fs20 \sbasedon2\snext0 Hn2;}{
\s44\li120\sb60\sa60\sl-240\slmult1\nowidctlpar \b\f2\fs20 \sbasedon3\snext0 Hn3;}{\s45\li-1800\sa420\sl-600\slmult1\keepn\pagebb\nowidctlpar \b\f95\fs48 \snext0 Ih;}{\s46\sa80\sl-220\slmult1\keepn\nowidctlpar \v\f95\cf5 \sbasedon0\snext0 index;}{
\s47\fi-320\li440\sa60\sl-220\slmult1\nowidctlpar\tqr\tx360\tx440 \f7\fs20 \sbasedon48\snext47 Lb1;}{\s48\fi-440\li440\sa60\sl-220\slmult1\nowidctlpar\tqr\tx360\tx440 \f7\fs20 \sbasedon0\snext48 Ln1;}{\s49\fi-320\li760\sa60\sl-220\slmult1
\nowidctlpar\tqr\tx680\tx760 \f7\fs20 \sbasedon50\snext49 Lb2;}{\s50\fi-440\li760\sa60\sl-220\slmult1\nowidctlpar\tqr\tx680\tx760 \f7\fs20 \sbasedon48\snext50 Ln2;}{\s51\li440\sa60\sl-220\slmult1\nowidctlpar\tqr\tx360\tx440 \f7\fs20 \sbasedon47\snext51 
Lbp;}{\s52\li120\sl-80\slmult1\nowidctlpar \f5\fs12 \sbasedon0\snext0 Le;}{\s53\li120\sl-40\slmult1\nowidctlpar \f5\fs12 \sbasedon52\snext0 Leh;}{\s54\sa80\sl-220\slmult1\nowidctlpar \f7\fs21 \sbasedon0\snext54 Lmc;}{\s55\li440\sa60\sl-220\slmult1
\nowidctlpar \f7\fs20 \sbasedon16\snext55 Lp1;}{\s56\li760\sa60\sl-220\slmult1\nowidctlpar \f7\fs20 \sbasedon55\snext56 Lp2;}{\s57\sl-220\slmult1\keepn\nowidctlpar\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty0 \f7\fs19 \snext0 Mp;}{
\s58\li120\sl-120\slmult1\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \f4\fs12 \snext0 Ne;}{\s59\li440\sl-120\slmult1\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \f4\fs12 \sbasedon58\snext16 Nei;}{\s60\li120\sa60\sl-220\slmult1\nowidctlpar\tx720\tx1200 \f7\fs20 
\sbasedon0\snext58 Nh;}{\s61\li440\sa60\sl-220\slmult1\nowidctlpar\tx1040\tx1520 \f7\fs20 \sbasedon0\snext61 Nhi;}{\s62\li120\sb40\sa80\sl-220\slmult1\keepn\nowidctlpar \f7\fs20 \sbasedon0\snext58 Np1;}{\s63\fi-280\li280\sb40\sa80\sl-220\slmult1
\keepn\nowidctlpar \f7\fs20 \sbasedon62\snext59 Np1i;}{\s64\li120\sa60\sl-220\slmult1\nowidctlpar \f7\fs20 \sbasedon0\snext58 Np2;}{\s65\li440\sa60\sl-220\slmult1\nowidctlpar \f7\fs20 \sbasedon0\snext59 Np2i;}{\s66\li120\sa40\sl-120\slmult1\nowidctlpar
\brdrb\brdrs\brdrw15 \f4\fs12 \sbasedon58\snext60 Ns;}{\s67\li440\sa40\sl-120\slmult1\nowidctlpar\brdrb\brdrs\brdrw15 \f4\fs12 \sbasedon66\snext61 Nsi;}{\s68\li-280\sl-80\slmult1
\keepn\pagebb\nowidctlpar\pvpara\phpg\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0 \f4\fs12 \snext0 Pb;}{\s69\li120\sb40\sa60\sl-220\slmult1\nowidctlpar \b\f7\fs20 \sbasedon0\snext48 Proch;}{\s70\li120\sa60\sl-220\slmult1\nowidctlpar \f7\fs20 
\sbasedon0\snext48 Procp;}{\s71\sb60\sl-240\slmult1\keepn\nowidctlpar \b\f7 \sbasedon1\snext9 Rh1;}{\s72\sb60\sa60\sl-240\slmult1\nowidctlpar \b\f7\fs20 \sbasedon2\snext0 Rmh;}{\s73\li-1770\ri30\sb280\sa250\sl-120\slmult1\keepn\nowidctlpar\brdrb
\brdrs\brdrw15\brdrcf2 \f4\fs8\cf8 \snext71 Rule;}{\s74\li-240\sl-300\slmult1\nowidctlpar \f4\fs16 \snext0 Sbre;}{\s75\li280\ri280\sl-220\slmult1
\keepn\nowidctlpar\tx670\tx1060\tx1450\tx1840\tx2230\tx2620\tx3010\tx3400\tx3790\tx4180\tx4570\tx4960\tx5350\tx5740\tx6130\tx6520 \f11\fs16 \snext75 SbrEx;}{\s76\li280\ri280\sb220\sa40\sl-280\slmult1\keepn\nowidctlpar \b\f95 \snext0 Sbrh;}{
\s77\li280\ri280\sb40\sa40\sl-240\slmult1\keepn\nowidctlpar \b\f95\fs21 \snext0 Sbrh2;}{\s78\fi-280\li560\ri280\sa80\sl-220\slmult1\keepn\nowidctlpar\tx560 \f7\fs20 \sbasedon0\snext78 SbrLb;}{\s79\qr\li280\ri280\sl-160\slmult1\keepn\nowidctlpar \f7\fs12 
\sbasedon0\snext0 SbrLe;}{\s80\fi-280\li560\ri280\sa80\sl-220\slmult1\keepn\nowidctlpar\tx560 \f7\fs20 \sbasedon78\snext78 SbrLp;}{\s81\li280\ri280\sa160\sl-240\slmult1\keepn\nowidctlpar \f4\fs21 \snext81 Sbrp;}{\s82\li-240\sl-100\slmult1
\keepn\nowidctlpar \f4\fs16 \snext76 Sbrs;}{\s83\li120\sa60\sl-220\slmult1\nowidctlpar \f7\fs20 \sbasedon0\snext83 Syn;}{\s84\li-1800\sa60\sl-220\slmult1\nowidctlpar\tx-1520\tx-1240\tx-960\tx-680\tx-400\tx-120\tx160\tx440\tx720\tx1000 \f7\fs20 
\sbasedon0\snext0 Synw;}{\s85\li120\sb20\sa60\nowidctlpar\tx240\tx280\tx560 \f7\fs19 \sbasedon0\snext85 Tart;}{\s86\qr\li30\ri30\sb80\sa80\sl-180\slmult1\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \f7\fs16 \sbasedon0\snext0 Te;}{\s87\li120\sl-40\slmult1
\nowidctlpar \f7\fs12 \sbasedon88\snext0 Teh;}{\s88\li120\sl-80\slmult1\nowidctlpar \f7\fs12 \sbasedon0\snext0 Tes;}{\s89\qr\li310\ri30\sb80\sa80\sl180\slmult1\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \f7\fs16 \sbasedon0\snext48 Tei;}{
\s90\li280\sb20\sa20\sl-220\slmult1\nowidctlpar \f7\fs20 \sbasedon30\snext31 Term2;}{\s91\qr\li-1770\ri30\sb80\sa80\sl180\slmult1\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \f7\fs16 \sbasedon86\snext0 Tew;}{\s92\li120\sl-240\slmult1
\keep\nowidctlpar\tx480\tx840\tx1200\tx1560\tx1920\tx2280\tx2640\tx3000 \f3\fs20 \snext92 Tex;}{\s93\li120\sb20\sa60\sl-240\slmult1\keep\nowidctlpar\tx480\tx840\tx1200\tx1560\tx1920\tx2280\tx2640\tx3000 \f11\fs20 \sbasedon35\snext93 Texf;}{
\s94\fi-140\li140\sb20\sa40\sl-200\slmult1\nowidctlpar\tx280 \f7\fs17 \sbasedon0\snext94 Tf;}{\s95\li200\sb40\sl-220\slmult1\nowidctlpar \b\f7\fs20 \sbasedon0\snext96 Th;}{\s96\li120\sl-40\slmult1\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \f4\fs8 \snext0 
Tr;}{\s97\li120\sb40\sl-220\slmult1\nowidctlpar \b\f7\fs20 \sbasedon95\snext97 Thf;}{\s98\li120\sa40\sl-220\slmult1\nowidctlpar\tqr\tldot\tx6960 \f7\fs20 \sbasedon0\snext99 toc 1;}{\s99\li280\sa40\sl-220\slmult1\nowidctlpar\tqr\tldot\tx6960 \f7\fs20 
\sbasedon98\snext99 toc 2;}{\s100\li560\sa40\sl-220\slmult1\nowidctlpar\tqr\tldot\tx6960 \f7\fs20 \sbasedon98\snext100 toc 3;}{\s101\li240\sa60\sl-220\slmult1\nowidctlpar \f7\fs20 \sbasedon0\snext101 Tp;}{\s102\li120\sa60\sl-220\slmult1\nowidctlpar 
\f7\fs20 \sbasedon101\snext102 Tpf;}{\s103\li440\sa60\sl-220\slmult1\nowidctlpar \f7\fs20 \sbasedon16\snext103 Tpi;}{\s104\li320\sa60\sl-220\slmult1\nowidctlpar \f7\fs20 \sbasedon0\snext103 Tpif;}{\s105\qr\li240\sa60\sl-220\slmult1\nowidctlpar \f7\fs20 
\sbasedon101\snext105 Tpr;}{\s106\li120\sb20\sa60\sl-220\slmult1\nowidctlpar \f7\fs19 \sbasedon83\snext106 Tsyn;}{\s107\sb20\sa60\sl-220\slmult1\keepn\nowidctlpar \b\f4\fs19 \snext96 Tt;}{\s108\li-1800\sb20\sa60\sl-220\slmult1\keepn\nowidctlpar 
\b\f4\fs19 \sbasedon107\snext96 Ttw;}{\s109\li120\sl-120\slmult1\nowidctlpar\brdrt\brdrdb\brdrw15\brsp20\brdrcf2 \f4\fs12 \sbasedon58\snext0 We;}{\s110\li440\sl-120\slmult1\nowidctlpar\brdrt\brdrdb\brdrw15\brsp20\brdrcf2 \f4\fs12 \sbasedon109\snext16 
Wei;}{\s111\li120\sa60\sl-220\slmult1\nowidctlpar\tx1200 \f7\fs20 \sbasedon0\snext109 Wh;}{\s112\li440\sa60\sl-220\slmult1\nowidctlpar\tx1560 \f7\fs20 \sbasedon111\snext110 Whi;}{\s113\li120\sa40\sl-120\slmult1\nowidctlpar\brdrb\brdrdb\brdrw15\brdrcf2 
\f4\fs12 \sbasedon66\snext111 Ws;}{\s114\li440\sa40\sl-120\slmult1\nowidctlpar\brdrb\brdrdb\brdrw15\brdrcf2 \f4\fs12 \sbasedon113\snext16 Wsi;}{\*\cs115 \additive\ul \sbasedon10 Popup Text;}{\*\cs116 \additive\v\cf13 \sbasedon10 Hidden Text;}{\*\cs117 
\additive\f7\fs18\up6\lang1033 \sbasedon10 footnote reference;}{\*\cs118 \additive\uldb \sbasedon115 Jump Text;}{\*\cs119 \additive\f11 \sbasedon10 Example Code Text;}{\*\cs120 \additive\scaps\f5\fs20 \sbasedon10 Keystroke Text;}{
\s121\li120\sl-220\slmult1\nowidctlpar \f2\fs20 \sbasedon0\snext0 footnote text;}{\s122\li115\sb160\sl-240\slmult1\nowidctlpar \f7\fs20 \snext0 See Also;}{\*\cs123 \additive\super \sbasedon10 endnote reference;}}{\info
{\title $ # + K OLE 2.0 Object Viewer Help Index}{\author Charlie Kindel}{\operator Charlie Kindel}{\creatim\yr1994\mo2\dy16\hr11\min55}{\revtim\yr1995\mo9\dy28\hr9\min6}{\version2}{\edmins1}{\nofpages59}{\nofwords5665}{\nofchars32292}
{\*\company Microsoft}{\vern57431}}\widowctrl\ftnbj\aenddoc\hyphhotz0\noextrasprl\prcolbl\cvmme\sprsspbf\brkfrm\hyphcaps0 \fet0\sectd \linex576\endnhere {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2
\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}\pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} OLE 2 Object Viewer Help Index}} {\cs117\f7\fs18\up6 #
{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} main_index}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 0}} {\cs117\f7\fs18\up6 K{\footnote 
\pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} contents;index;main}} Ole2View 2.0 Help Index
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 {\b\uldb What Is Ole2View?}{\b\v what_is_ole2view}{\b 
\par }\pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 Overview
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 \tab {\uldb The Main Window}{\v main_window}
\par \tab {\uldb The Type Library Viewer}{\v HID_FILE_VIEWTYPELIB}
\par \tab {\uldb The Object List Pane}{\v HID_OBJECTVIEW}
\par {\f9\ulw \tab }{\f9\uldb The Object Information Pane}{\v\f9 HID_IFACEVIEW}{\f9 
\par \tab }{\f9\uldb The Interface List Pane}{\v\f9 HID_IFACELISTVIEW}
\par \tab {\uldb Interface Viewers}{\v HIDD_IFACEDIALOG}{\f9\ulw 
\par } \tab {\uldb Ole2View Interface Viewer DLLs}{\v InterfaceViewerDLLs}
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 Commands
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 \tab {\uldb File menu}{\v menu_file}
\par \tab {\uldb Objects menu}{\v menu_objects}
\par \tab {\uldb Interfaces menu}{\v menu_interfaces}
\par \tab {\uldb View menu}{\v menu_view}
\par \tab {\uldb Help menu}{\v menu_help}
\par 
\par Ole2View was developed using Microsoft Visual C++ and MFC 2.0.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} What Is Ole2View?}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} what_is_ole2view}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 200}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} overview;what is}} What Is Ole2View?
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 The OLE 2 Object Viewer is a tool designed to help implementors of OLE 2 enabled applications better understand what is happening in their systems.   It is also a powerful testing 
tool that lets you verify that your objects and interfaces are behaving exactly as you planned.
\par Primarily Ole2View  has been designed to help developers answer the following questions:
\par 
\par \pard\plain \s47\fi-320\li720\sa60\sl-220\slmult1\widctlpar\tqr\tx360\tx440 \f7\fs20 \{bmc hlp\\bullet.bmp\} What OLE 2 objects are installed in my system?  ({\uldb The Object List Pane}{\v HID_OBJECTVIEW})
\par \pard\plain \s49\fi-320\li720\sa60\sl-220\slmult1\widctlpar\tqr\tx680\tx760 \f7\fs20 \{bmc hlp\\bullet.bmp\} What interfaces does a given object support? ({\f9\uldb The Interface List Pane}{\v\f9 HID_IFACELISTVIEW}{\f9 )}
\par \{bmc hlp\\bullet.bmp\} Is object x an inproc server or handler, or is it local?  What are it's registration database entries?  ({\f9\uldb The Object Information Pane}{\v\f9 HID_IFACEVIEW}{\f9 )}
\par \{bmc hlp\\bullet.bmp\} Does this object support this interface correctly? ({\uldb Interface Viewer}{\v HIDD_IFACEDIALOG})
\par \pard \s49\fi-320\li1080\sa60\sl-220\slmult1\widctlpar\tqr\tx680\tx760 \{bmc hlp\\bullet.bmp\} What kind of information can i get from that interface?
\par \{bmc hlp\\bullet.bmp\} What does IDataObject report for clipboard formats?
\par \{bmc hlp\\bullet.bmp\} What does IDispatch support?
\par \pard \s49\fi-320\li720\sa60\sl-220\slmult1\widctlpar\tqr\tx680\tx760 \{bmc hlp\\bullet.bmp\} What version are my OLE2 dlls? ({\uldb Show OLE 2 Version}{\v HID_FILE_SHOWVERSION})
\par \{bmc hlp\\bullet.bmp\} When an OLE2 app runs, where is it finding the OLE2 dlls? ({\uldb Show OLE 2 Version}{\v HID_FILE_SHOWVERSION})
\par \{bmc hlp\\bullet.bmp\} Does a given Type Library export functions, subroutines, constants, and variables correctly?  If so, what are their names and types? ({\uldb The Type Library Viewer}{\v HID_FILE_VIEWTYPELIB})
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 However, because Ole2View is extensible (see {\uldb Ole2View Interface Viewer DLLs}{\v InterfaceViewerDLLs}), it is capable of answering many more of your OLE 2 questions!
\par {\b 
\par How does it work?
\par }In order to list all objects on your system, and to display the interfaces those objects support, Ole2View utilizies the following features of OLE 2:
\par \pard\plain \s49\fi-320\li760\sa60\sl-220\slmult1\widctlpar\tqr\tx680\tx760 \f7\fs20 \{bmc hlp\\bullet.bmp\} All OLE 2 objects have entries in the registration database.
\par \{bmc hlp\\bullet.bmp\} The registration data base contains a list of standard interfaces.
\par \pard\plain \li720\sa60\sl-220\slmult1\widctlpar \f7\fs20 {\uldb How Ole2View Uses The Registration Database}{\v HowRegDB}
\par \pard\plain \s49\fi-320\li760\sa60\sl-220\slmult1\widctlpar\tqr\tx680\tx760 \f7\fs20 \{bmc hlp\\bullet.bmp\} OLE 2 objects support a IClassFactory object (Class Object), a pointer to which will be returned by the CoGetClassObjec
t() API (Class Object interface pointer).
\par \pard\plain \li720\sa60\sl-220\slmult1\widctlpar \f7\fs20 {\uldb How Ole2View uses the Class Object}{\v HowClassObject}
\par \pard\plain \s49\fi-320\li760\sa60\sl-220\slmult1\widctlpar\tqr\tx680\tx760 \f7\fs20 \{bmc hlp\\bullet.bmp\} IClassFactory::CreateInstance() will return an interface pointer to a new instance of an object (Instance interface pointer).
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} How Ole2View Uses The Registration Database}} {\cs117\f7\fs18\up6 #{\footnote 
\pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HowRegDB}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 205}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} registry;registration;database;registration database;regdb;regedit}} How Ole2View Uses The Registration Database
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 Central to the architecture of OLE 2 is the Windows registration database.   The followin
g briefly describes how OLE 2 and OLE 2 objects use the registration database, and how Ole2View uses the information stored there.   For more information on the  registration database see the Windows SDK documentation as well as Appendix A of the OLE 2 Pr
ogrammers' Reference ("Registering Applications").
\par \pard \li720\sa60\sl-220\slmult1\widctlpar {\b 
\par HKEY_CLASSES_ROOT\\CLSID}
\par Off of the root of HKEY_CLASSES_ROOT is a section with a key that equals "CLSID".   This key contains entries for each OLE object installed on your system.  Each entry (sub-key) has the form:
\par \pard \li120\sa60\sl-220\slmult1\widctlpar 
\par \pard \li1440\sa60\sl-220\slmult1\widctlpar \{xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\} = yyyyyy
\par \pard \li120\sa60\sl-220\slmult1\widctlpar 
\par \pard \li720\sa60\sl-220\slmult1\widctlpar where \{xx...xx\} is the unique CLSID of an object, and yyyyyy is the name of the object as it would appear in the "Object.Insert..." dialog box. 
\par Each CLSID entry has a number of sub-keys that describe the object.  For example, the location of the object's executable image and default icon.  Ole2View uses the following sub-keys:
\par 
\par \pard \fi-720\li1440\sa60\sl-220\slmult1\widctlpar {\b HKEY_CLASSES_ROOT\\CLSID\\<clsid>\\DefaultIcon\tab 
\par }\tab Used to determine the object's icon.
\par {\b HKEY_CLASSES_ROOT\\CLSID\\<clsid>\\LocalServer\tab 
\par }\tab Used to determine the object's icon.
\par {\b HKEY_CLASSES_ROOT\\CLSID\\<clsid>\\LocalServer32
\par }\tab Used to determine the object's icon.
\par \tab Objects with LocalServer32 entries have a little "32" in the lower right corner of their icons in the object list box.
\par {\b HKEY_CLASSES_ROOT\\CLSID\\<clsid>\\InprocServer\tab 
\par }\tab Used to determine the object's icon.
\par \tab Objects with InprocServer32 entries have a little "32" in the lower right corner of their icons in the object list box.
\par {\b HKEY_CLASSES_ROOT\\CLSID\\<clsid>\\InprocServer32
\par }\tab Used to determine the object's icon.
\par {\b HKEY_CLASSES_ROOT\\CLSID\\<clsid>\\ProgID\tab 
\par }\tab Contains the Programmatic Identifier for the object, and used to reference the OLE 1.0 compatiblity information stored under the ProgID key (see below).
\par {\b HKEY_CLASSES_ROOT\\CLSID\\<clsid>\\Ole1Class\tab 
\par }\tab Identifies the object as an OLE 1.0 object.   Ole2View uses the existence of this key to determine whether the listbox icon for the object should have a little "1.0" in it.
\par {\b HKEY_CLASSES_ROOT\\CLSID\\<clsid>\\Control
\par }\tab Identifies the object as an OLE Custom Control.
\par {\b HKEY_CLASSES_ROOT\\<progid>\\Insertable\tab 
\par }\tab When present, the object is an embeddable OLE 2 object.  Ole2View uses this entry to determine if the object should have an "Insertable" icon in the Object List Pane.
\par {\up6 \tab }To find the object's icon Ole2View tries the DefaultIcon, LocalServer, InprocServer, InprocHandler keys in the order given.   If it cannot find the icon using these keys, it tries the \\<ProgID>\\Protocol\\StdFileEditing\\
Server entry, and if that fails it display's a default "OLE 2" icon.
\par \tab Also, if the \{CLSID\}
 entry has an InProcServer key whose value is one of the OLE 2 DLLs (such as OLE32.DLL), Ole2View identifies the object as being an internal OLE 2 object.  These objects will not appear in the Object List Pane unless the Show Internal
 OLE 2 Objects menu item is checked.
\par \pard \li720\sa60\sl-220\slmult1\widctlpar {\b HKEY_CLASSES_ROOT\\<ProgID> = MainUserTypeName
\par }Ole2View displays the contents of these keys, but only {\i uses} the Protocol\\StdFileEditing\\Server sub-key (to determine the object's icon; see above).
\par {\b HKEY_CLASSES_ROOT\\Interfaces
\par }
OLE 2 provides one way for determining if an object supports a particular interface:  The IUnknown::QueryInterface() function.   Because QueryInterface() requires that a interface identifier (IID) be passed, there is no way to 'enumerate' the interfaces s
upported by an object.   
\par However, the registration database contains a key with the name "Interfaces" that contains sub-keys for each standard OLE 2 interface.   These subkeys have the following form:
\par \pard \li120\sa60\sl-220\slmult1\widctlpar 
\par \pard \li1440\sa60\sl-220\slmult1\widctlpar \{xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\} = yyyyyy
\par 
\par \pard \li720\sa60\sl-220\slmult1\widctlpar Where "\{xxx....xxx\}" is the Interface ID of the interface and "yyyyyy" is the textual name (e.g. "IDataObject").   These keys are referred to as \{IID\} keys.
\par Thus, in order to determine what interfaces an object supports, Ole2View simply enumerates the \\Interfaces key in the registry (using RegEnumKey), and calls QueryInterface() for each one.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} How Ole2View uses the Class Object}} {\cs117\f7\fs18\up6 #{\footnote 
\pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HowClassObject}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 210}} {\cs117\f7\fs18\up6 K{\footnote 
\pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} class object;createinstance;classfactory;IClassFactory}} How Ole2View uses the Class Object
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 When you double click on an object in the Object List Pane, Ole2View exectutes code similar to the following:
\par 
\par // Get the Class Object
\par hr = CoGetClassObject( m_clsidCur, m_dwClsCtx, NULL, 
\par                        IID_IClassFactory,
\par                        (LPVOID FAR *)m_pIClassFactory ) ;
\par                  
\par if (SUCCEEDED(hr))         
\par \{ 
\par     // Create an instance of the object (Instance) and store
\par     // it in m_pIUnknown
\par     //
\par     hr = m_pIClassFactory->CreateInstance( NULL, IID_IUnknown, 
\par                                 (LPVOID FAR *)&m_pIUnknown ) ;
\par \}
\par 
\par for (each entry in the \\Interfaces section of the registry)
\par \{
\par     hr = m_pIUnknown->QueryInterface( iid, (LPVOID FAR*)&pIUnk ) ;
\par     if (SUCCEEDED( hr ))
\par     \{                                  
\par         // Add this entry to the listbox and identify it as an interface
\par         // that was retrieved via QueryInterface on the {\b Instance object
\par         ...}
\par         pIUnk->Release() ;
\par     \}                        
\par 
\par     hr = m_pIClassFactory->QueryInterface( iid, (LPVOID FAR*)&pIUnk ) ;
\par     if (SUCCEEDED( hr ))
\par     \{                                  
\par         // Add this entry to the listbox and identify it as an interface
\par         // that was retrieved via QueryInterface on the {\b Class Object}
\par {\b         ...
\par }        pIUnk->Release() ;
\par     \}                        
\par \}
\par 
\par where m_clsidCur is the CLSID of the currently selected object in the object list pane, and m_dwClsCtx is determined by the CLSCTX menu/toolbar items.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} File menu commands}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} menu_file}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 300}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} files: managing}} File menu commands
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 The File menu offers the following commands:
\par 
\par \trowd \trgaph108\trleft-108 \cellx2880\cellx8622 \pard \li120\sa60\widctlpar\intbl {\uldb Bind To File}{\v HID_FILE_BINDTOAFILE}{\uldb \cell }
Create an instance of an object by binding to a persistant instance of that object (e.g. a file) by using a file moniker.\cell \pard \widctlpar\intbl \row \trowd \trgaph108\trleft-108 \cellx2880\cellx8622 \pard \li120\sa60\widctlpar\intbl {\uldb 
View Type Library}{\v HID_FILE_VIEWTYPELIB}{\uldb \cell }Allows you to view (browse) a typelibrary file.\cell \pard \widctlpar\intbl \row \pard \li120\sa60\widctlpar\intbl {\uldb Run the Registration Editor}{\v HID_FILE_RUNREGEDIT}
\par {\uldb \cell }Runs REGEDIT.EXE /V.\cell \pard \widctlpar\intbl \row \pard \li120\sa60\widctlpar\intbl {\uldb Show OLE 2 Version}{\v HID_FILE_SHOWVERSION}{\uldb \cell }Shows OLE 2 Version Information.\cell \pard \widctlpar\intbl \row \trowd 
\trgaph108\trleft-108 \cellx2880\cellx8622 \pard \li120\sa60\widctlpar\intbl {\uldb Exit}{\v HID_APP_EXIT}\tab 
\par {\uldb \cell }Exits Ole2View.\cell \pard \widctlpar\intbl \row \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $}
 Bind To File (File Menu)}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_FILE_BINDTOAFILE}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {
\cs117\f7\fs18\up6 +} 301}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} bind;moniker;file moniker;bind to file;open file}} Bind To File (File Menu)
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 Use this command to create an instance of an object by binding to a persistant instance of that object (e.g. a file) by using a file moniker.
\par When you choose this command, a File Open dialog box appears; allowing you to specify a file to be bound to.   Ole2View takes the filename you provide and calls the CreateFileMoniker API to create a file moniker for the file.  It then calls the BindMonike
r API to attempt to bind to the file moniker.
\par Ole2View can also accept a filename on the command line to accomplish the same thing.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} View Type Library Command (File Menu)}} {\cs117\f7\fs18\up6 #{\footnote 
\pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_FILE_VIEWTYPELIB}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 302}} {\cs117\f7\fs18\up6 K{\footnote 
\pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} type library;ITypeLib;*.tlb;*.olb}} View Type Library Command (File Menu)
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 Use this command to view a type library file (these files are generated by the MkTypeLib utility).
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 Output TypeLib to File
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 
The Type Library Viewer has a "To File..." button.  This button allows you to dump the contents of a TypeLibrary (or TypeInfo) to a text file.  The file will contain all of the functions, subroutines, variables, and constants found in the type library in 
a Visual Basic like syntax.   The entries in this file look like this:
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 Functions
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 ' GetFileData
\par '   Retrieves the date stamp of a file
\par Declare Function GetFileDate (FileName As String) As String
\par 
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 Subroutines (Functions without return values)
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 ' NewDocument
\par '   Creates a new document
\par Declare Sub NewDocument (Author As String, FileName As String, Revision As Integer)
\par 
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 Variables
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 ' CurrentUser
\par '    The currently logged in username
\par Dim CurrentUser As String
\par 
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 Constants
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 ' MAX_COLORS
\par '   The maximum number of colors supported.
\par Const MAX_COLORS As Integer = 256
\par 
\par The "To File..." feature is particularly useful when testing your product.  It allows you to create a file that you can compare against your documentation (or to create your documentation!).
\par 
\par See the OLE 2 Automation documentation for more information on type libraries.
\par The code for the Type Library Viewer is actually contained within DEFO2V.DLL, and is the same code that is invoked when either the IDispatch Interface Viewer or the ITypeInfo Interface Viewers are used.   See {\uldb Interface Viewer}{\v HIDD_IFACEDIALOG}
 for more information.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Show OLE 2 Version Command}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_FILE_SHOWVERSION}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 303}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} ole2version}} Show OLE 2 Version Command (File Menu)
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 Use this command to display the OLE 2 version numbers along with the paths where the OLE 2 DLLs were loaded from.  
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 How to use this feature
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 
This  command is useful when you are not sure if you have multiple versions of the OLE DLLs on your system and you want to make sure the right versions are being loaded.   Note:  This proceedure only applies to Win16 OLE 2, not OLE 2 on Win32.
\par 
\par \pard\plain \s47\fi-320\li440\sa60\sl-220\slmult1\widctlpar\tqr\tx360\tx440 \f7\fs20 \tab \tab 1.\tab Make sure no OLE 2 applications are running (including Ole2View!).
\par \pard\plain \s49\fi-320\li760\sa60\sl-220\slmult1\widctlpar\tqr\tx680\tx760 \f7\fs20 2.\tab \tab Use the "OLE 2 Free Module" application included with the OLE 2 SDK to free any residual OLE 2 DLL instances.
\par 3.\tab \tab Run the OLE 2 application you are curious about to load the OLE 2 DLLs.   You may have to embed an object in order for the libraries to be instantiated.
\par 4.\tab \tab Run Ole2View and choose the Show OLE 2 Version Command.   The list of DLLs will show you where the DLLs were found.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Run the Registration Editor}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_FILE_RUNREGEDIT}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 304}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} REGEDIT;registry;registration database}} Run the Registration Editor (File Menu)
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 Use this command to run the Registration Database Editor.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} File Exit command}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_APP_EXIT}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 305}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} exit}} Exit command (File menu)
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 Use this command to end your Ole2View session.  You can also use the Close command on the application Control menu.  Ole2View prompts you to save documents with unsaved changes.
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 Shortcuts
\par \pard\plain \fi-1080\li1440\sa60\widctlpar\tx1440 \f7\fs20 Mouse:\tab Double-click the application's Control menu button.
\par \tab \{bmc hlp\\appexit.bmp\}
\par Keys:\tab ALT+F4
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Objects menu commands}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} menu_objects}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 400}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} objects}} Objects menu commands
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 The Objects menu offers the following commands:
\par 
\par \trowd \trgaph108\trleft-108 \cellx2520\cellx7452 \pard \li120\sa60\widctlpar\intbl {\uldb Show Class IDs}{\v HID_VIEW_CLASSIDS}{\uldb \cell }\pard \li90\sa60\widctlpar\intbl Shows or hides class IDs in the Object List Pane.\cell \pard \widctlpar\intbl 
\row \trowd \trgaph108\trleft-108 \cellx2520\cellx7452 \pard \li120\sa60\widctlpar\intbl {\uldb Show Internal OLE2 Objects}{\v HID_OBJECTS_SHOWINTERNAL}{\uldb \cell }\pard \li90\sa60\widctlpar\intbl 
Shows or hides internal OLE 2 objects.   If the object has a LocalServer or LocalServer32 entry int the registration database that points to one of the OLE 2 system DLLs, the object is considered "internal". \cell \pard \widctlpar\intbl \row \pard 
\li120\sa60\widctlpar\intbl {\uldb Show OLE 1.0 Objects}{\cs116\v\cf13 HID_OBJECTS_SHOWOLE10OBJECTS}{\uldb \cell }\pard \li90\sa60\widctlpar\intbl 
Show OLE 1.0 objects.   The Ole1Class key in the registry is used to determine whether an object is an OLE 1.0 object or not.\cell \pard \widctlpar\intbl \row \pard \li120\sa60\widctlpar\intbl {\uldb Show NotInsertable Objects}{\cs116\v\cf13 
HID_OBJECTS_SHOWNOTINSERTABLEOBJECTS}{\uldb \cell }\pard \li90\sa60\widctlpar\intbl Show objects that do not have the "Insertable" key set.\cell \pard \widctlpar\intbl \row \trowd \trgaph108\trleft-108 \cellx2520\cellx7452 \pard 
\li120\sa60\widctlpar\intbl {\uldb Show Containers}{\cs116\v\cf13 HID_OBJECTS_SHOWCONTAINERS}{\uldb \cell }\pard \li90\sa60\widctlpar\intbl 
Show objects that are registered, but are really OLE container applications.  These applications register a class object to typically support drag and drop.\cell \pard \widctlpar\intbl \row \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {
\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} View Class IDs command (Objects Menu)}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {
\cs117\f7\fs18\up6 #} HID_VIEW_CLASSIDS}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 401}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {
\cs117\f7\fs18\up6 K} classid}} Class ID command (Objects menu)
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 Use this command to display or hide class IDs in the {\uldb Object List Pane}{\v HID_OBJECTVIEW} .
\par Sometimes it is useful to have a quick reference as to which class IDs are assigned to which objects in your system.   Turning this option on provides a way to easily see this.
\par 
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Show Internal OLE Objects command (Objects Menu)}} {\cs117\f7\fs18\up6 #
{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_OBJECTS_SHOWINTERNAL}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 410}} {
\cs117\f7\fs18\up6 K{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} internal;ps*}} Show Internal OLE 2 Objects command (Objects Menu)
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 Shows or
 hides internal OLE 2 objects that are identified as internal OLE 2 objects.  Ole2view determines whether an object is internal or not by looking at it's InProcServer32 and InProcServer entries.  If these entries point to an OLE system DLL the object is c
onsidered internal.
\par Objects that are identified as internal to OLE 2 have a question mark icon associated with them.
\par By turning this option off you can greatly reduce the amount of clutter in the object list pane.
\par 
\par 
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\b0\f7\fs18\up6\super ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Show OLE 1.0 Objects command (Objects Menu)}#{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_OBJECTS_SHOWOLE10OBJECTS}K{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} OLE 1.0;objects menu}+{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 411}} Show OLE 1.0 Objects command (Objects Menu)
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 Show OLE 1.0 objects.   The Ole1Class key in the registry is used to determine whether an object is an OLE 1.0 object or not.
\par 
\par 
\par 
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\b0\f7\fs18\up6\super ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Show NotInsertable Objects command (Objects Menu)}#{\footnote 
\pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_OBJECTS_SHOWNOTINSERTABLEOBJECTS}K{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} Insertable;NotInsertable;objects menu}+
{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 412}}Show NotInsertable Objects command (Objects Menu)
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 Show objects that do not have the "Insertable" key set.
\par 
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\b0\f7\fs18\up6\super ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Show Containers command (Objects Menu)}#{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_OBJECTS_SHOWCONTAINERS}K{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} containers;objects menu}+{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 413}}Show Containers command (Objects Menu)
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 Show objects that are registered, but are really OLE container applications.  These applications register a class object to typically support drag and drop.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Interfaces menu commands}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} menu_interfaces}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 500}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} interfaces;interface view;object view}} Interfaces menu commands
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 The Interfaces offers commands that control how the {\uldb Interface List Pane}{\v HID_IFACELIST_VIEW} works:
\par 
\par \trowd \trgaph108\trleft-108 \cellx3240\cellx8100 \pard \li120\sa60\widctlpar\intbl {\uldb Get Interfaces}{\v HID_IFACEVIEW_GETINTERFACES}{\uldb \cell }\pard \li120\sa60\sl-220\slmult1\widctlpar\intbl 
Instantiates the current object and shows implemented interfaces.\cell \pard \widctlpar\intbl \row \trowd \trgaph108\trleft-108 \cellx3240\cellx8100 \pard \li120\sa60\widctlpar\intbl {\uldb Interface Viewer...}{\v HID_IFACEVIEW_IFACEVIEWER}{\uldb \cell 
}\pard \li120\sa60\sl-220\slmult1\widctlpar\intbl Displays the {\uldb Interface Viewer}{\v HIDD_IFACEDIALOG} for the currently selected interface if that interface is implemented.\cell \pard \widctlpar\intbl \row \pard \li120\sa60\widctlpar\intbl {\uldb 
Show All Interfaces}{\v HID_VIEW_SHOWALLINTERFACES}{\uldb \cell }\pard \li120\sa60\sl-220\slmult1\widctlpar\intbl Turns on or off the display of all interfaces in the {\uldb Interface List Pane}{\v HID_IFACELISTVIEW}\cell \pard \widctlpar\intbl \row 
\pard \li120\sa60\widctlpar\intbl {\uldb Use CLSCTX_INPROC_SERVER}{\v HID_IFACES_USEINPROCSERVER}{\uldb \cell }\pard \li120\sa60\sl-220\slmult1\widctlpar\intbl If this item is selected, Ole2View will u
se the CLS_CTX_INPROC_SERVER flag when calling the OLE 2 function CoGetClassObject to retrieve the IClassFactory pointer for the object\cell \pard \widctlpar\intbl \row \pard \li120\sa60\widctlpar\intbl {\uldb Use CLSCTX_INPROC_HANDLER}{\v 
HID_IFACES_USEINPROCHANDLER}{\uldb \cell }\pard \li120\sa60\sl-220\slmult1\widctlpar\intbl 
If this item is selected, Ole2View will use the CLS_CTX_INPROC_HANDLER flag when calling the OLE 2 function CoGetClassObject to retrieve the IClassFactory pointer for the object.
\par \cell \pard \widctlpar\intbl \row \trowd \trgaph108\trleft-108 \cellx3240\cellx8100 \pard \li120\sa60\widctlpar\intbl {\uldb Use CLSCTX_LOCAL_SERVER}{\v HID_IFACES_USELOCALSERVER}{\uldb \cell }\pard \li120\sa60\sl-220\slmult1\widctlpar\intbl 
If this item is selected, Ole2View will use the CLS_CTX_LOCAL_SERVER flag when calling the OLE 2 function CoGetClassObject to retrieve the IClassFactory pointer for the object.
\par \cell \pard \widctlpar\intbl \row \pard \li120\sa60\sl-220\slmult1\widctlpar 
\par See Also {\uldb Interface List View}{\v HID_IFACELISTVIEW}
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Get Interfaces command (Interfaces Menu)}} {\cs117\f7\fs18\up6 #{\footnote 
\pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_IFACEVIEW_GETINTERFACES}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 501}} {\cs117\f7\fs18\up6 K
{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} get interfaces;instantiate object}} Get Interfaces command (Interfaces Menu)
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 This command causes the  {\uldb Interface List Pane}{\v HID_IFACELIST_VIEW} to instantiate the currently selected object and to display the interfaces that that object implements.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Interface Viewer... Command (Interfaces Menu)}} {\cs117\f7\fs18\up6 #
{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_IFACEVIEW_IFACEVIEWER}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 502}} {
\cs117\f7\fs18\up6 K{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} iinterface viewer}} Interface Viewer... Command (Interfaces Menu)
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 Displays the {\uldb Interface Viewer}{\v HIDD_IFACEDIALOG} for the currently selected interface if that interface is implemented.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Show All Interfaces command (Interfaces Menu)}} {\cs117\f7\fs18\up6 #
{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_VIEW_SHOWALLINTERFACES}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 503}} {
\cs117\f7\fs18\up6 K{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} interfaces}} Show All Interfaces command (Interfaces Menu)
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 Use this command to display or hide Interfaces that are not supported by the current object in the interface list box.
\par While interfaces that are supported by an object are clearly identified in the {\uldb Interface List Pane}{\v HID_IFACELISTVIEW} by their icon and {\b bold}{\b\i  }{\b text}
, it is sometimes helpful to turn off the display of the interfaces that are not implemented.  
\par 
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Show ClassFactory Object Interfaces Command (Interfaces Menu)}} {
\cs117\f7\fs18\up6 #{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_INTERFACES_SHOWCFI}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 504}}
 {\cs117\f7\fs18\up6 K{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} IClassFactory;class object}} Show ClassFactory Object Interfaces Command (Interfaces Menu)
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 Use this command to show or not show interfaces that are implemented by the IClassFactory Object (Class Object).
\par See {\uldb Interface List Pane}{\v HID_IFACELISTVIEW} for more information.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Use CLSCTX_INPROC_SERVER Command (Interfaces Menu)}} {\cs117\f7\fs18\up6 #
{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_IFACES_USEINPROCSERVER}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 505}} {
\cs117\f7\fs18\up6 K{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} inproc server;clsctx;inproc}} Use CLSCTX_INPROC_SERVER Command (Interfaces Menu)
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 If this item is selected, Ole2View will use the CLS_CTX_INPROC_SERVER flag when calling the OLE 2 function CoGetClassObject to retrieve the IClassFactory pointer for the object.
\par Using this command causes Ole2View to unload the currently active object, releasing interface pointers, and then reload the object using the new CLSCTX flags.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Use CLSCTX_INPROC_HANDLERCommand (Interfaces Menu)}} {\cs117\f7\fs18\up6 #
{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_IFACES_USEINPROCHANDLER}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 506}} {
\cs117\f7\fs18\up6 K{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} inproc handler;clsctx;inproc;handler}} Use CLSCTX_INPROC_HANDLER Command (Interfaces Menu)
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 If this item is selected, Ole2View will use the CLS_CTX_INPROC_HANDLER flag when calling the OLE 2 function CoGetClassObject to retrieve the IClassFactory pointer for the object.
\par Using this command causes Ole2View to unload the currently active object, releasing interface pointers, and then reload the object using the new CLSCTX flags.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Use CLSCTX_LOCAL_SERVER Command (Interfaces Menu)}} {\cs117\f7\fs18\up6 #
{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_IFACES_USELOCALSERVER}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 507}} {
\cs117\f7\fs18\up6 K{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} local server;clsctx;local;server}} Use CLSCTX_LOCAL_SERVER Command (Interfaces Menu)
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 If this item is selected, Ole2View will use the CLS_CTX_LOCAL_SERVER flag when calling the OLE 2 function CoGetClassObject to retrieve the IClassFactory pointer for the object.
\par Using this command causes Ole2View to unload the currently active object, releasing interface pointers, and then reload the object using the new CLSCTX flags.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} View Menu Commands}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} menu_view}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 600}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} view}} View menu commands
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 The View menu offers the following commands:
\par 
\par \trowd \trgaph108\trleft-108 \cellx1800\cellx7452 \pard \li120\sa60\widctlpar\intbl {\uldb Class IDs}{\v HID_VIEW_CLASSIDS}{\uldb \cell }\pard \li90\sa60\widctlpar\intbl Shows or hides class IDs in the object list.\cell \pard \widctlpar\intbl \row \trowd 
\trgaph108\trleft-108 \cellx1800\cellx7452 \pard \li120\sa60\widctlpar\intbl {\uldb Refresh}{\v HID_VIEW_REFRESH}{\uldb \cell }\pard \li90\sa60\widctlpar\intbl 
Causes Ole2View to unload the current object, re-read the registration database, reinstantiate the current object, and redisplay it's supported interfaces.\cell \pard \widctlpar\intbl \row \pard \li120\sa60\widctlpar\intbl {\uldb Toolbar}{\v 
HID_VIEW_TOOLBAR}{\uldb \cell }\pard \li90\sa60\widctlpar\intbl Shows or hides the toolbar.\cell \pard \widctlpar\intbl \row \trowd \trgaph108\trleft-108 \cellx1800\cellx7452 \pard \li120\sa60\widctlpar\intbl {\uldb Status Bar}{\v HID_VIEW_STATUS_BAR}{
\uldb \cell }\pard \li90\sa60\widctlpar\intbl Shows or hides the status bar.
\par \cell \pard \widctlpar\intbl \row \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Refresh command (View Menu)}} {
\cs117\f7\fs18\up6 #{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_VIEW_REFRESH}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 601}} {
\cs117\f7\fs18\up6 K{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} refresh}} Refresh command (View Menu)
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 Causes Ole2View to unload the current object, re-read the registration database, reinstantiate the current object, and redisplay it's supported interfaces.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} View Toolbar command}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_VIEW_TOOLBAR}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 602}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} toolbar}} Toolbar command (View menu)
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 
Use this command to display and hide the Toolbar, which includes buttons for some of the most common commands in Ole2View, such as File Open.  A check mark appears next to the menu item when the Toolbar is displayed.
\par 
\par See {\uldb Toolbar}{\v AFX_HIDW_TOOLBAR} for help on using the toolbar.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} View Status Bar Command}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_VIEW_STATUS_BAR}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 603}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} status bar}} Status Bar command (View menu)
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 
Use this command to display and hide the Status Bar, which describes the action to be executed by the selected menu item or depressed toolbar button, and keyboard latch state. A check mark appears next to the menu item when the Status Bar is displayed.

\par 
\par See {\uldb Status Bar}{\v AFX_HIDW_STATUS_BAR} for help on using the status bar.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Help Menu Commands}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} menu_help}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 604}} Help menu commands
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 The Help menu offers the following commands, which provide you assistance with this application: 
\par 
\par \trowd \trgaph108\trleft-108 \cellx1890\cellx7257 \pard \li120\sa60\widctlpar\intbl {\uldb Index}{\v HID_HELP_INDEX}{\uldb \cell }\pard \fi-720\li720\sa60\widctlpar\intbl Offers you an index to topics on which you can get help.\cell \pard 
\widctlpar\intbl \row \trowd \trgaph108\trleft-108 \cellx1890\cellx7257 \pard \li120\sa60\widctlpar\intbl {\uldb Using Help}{\v HID_HELP_INDEX}{\uldb \cell }\pard \fi-720\li720\sa60\widctlpar\intbl Provides general instructions on using help.\cell \pard 
\widctlpar\intbl \row \trowd \trgaph108\trleft-108 \cellx1890\cellx7257 \pard \li120\sa60\widctlpar\intbl {\uldb About}{\v HID_APP_ABOUT}{\uldb \cell }\pard \fi-720\li720\sa60\widctlpar\intbl Displays the version number of this application.\cell \pard 
\widctlpar\intbl \row \pard \fi-720\li720\sa60\widctlpar 
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Toolbar}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} AFX_HIDW_TOOLBAR}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 551}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} toolbar}} Toolbar
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 \{bml hlp\\hlptbar.bmp\}
\par The toolbar is displayed across the top of the application window, below the menu bar.  The toolbar provides quick mouse access to many tools used in Ole2View,
\par To hide or display the Toolbar, choose Toolbar from the View menu (ALT, V, T).
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Status Bar}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} AFX_HIDW_STATUS_BAR}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 52}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} status bar}} Status Bar
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 \{bml hlp\\hlpsbar.bmp\}
\par The status bar is displayed at the bottom of the Ole2View window.  To display or hide the status bar, use the Status Bar command in the View menu.
\par The status bar describes action
s of menu items as you use the arrow keys to navigate through menus.  This area similarly shows messages that describe the actions of toolbar buttons as you depress them, before releasing them.  If after viewing the description of the toolbar button comma
nd you wish not to execute the command, then release the mouse button while the pointer is off the toolbar button.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Index command (Help menu)}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_HELP_INDEX}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 650}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} index command}} Index command (Help menu)
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 Use this command to display the opening screen of Help.  From the opening screen, you can jump to step-by-step instructions for using Ole2View and various types of reference information.  
\par Once you open Help, you can click the Contents button whenever you want to return to the opening screen.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Using Help command (Help menu)}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_HELP_USING}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 651}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} help}} Using Help command (Help menu)
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 Use this command for instructions about using Help.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} About command (Help menu)}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_APP_ABOUT}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 652}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} about}} About command (Help menu)
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 Use this command to display the copyright notice and version number of your copy of Ole2View.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Context Help command}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_CONTEXT_HELP}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 653}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} help}} Context Help command 
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 \{bml hlp\\curhelp.bmp\}
\par 
\par Use the Context Help command to obtain help on some portion of Ole2View.  When you choose the Toolbar's Context Help button, the mouse pointer will change to an arrow and question mark.  Then click somewhere in the Ole2View window, such as another Toolbar
 button.  The Help topic will be shown for the item you clicked.
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 Shortcut
\par \pard\plain \fi-1080\li1440\sa60\widctlpar\tx1440 \f7\fs20 Keys:\tab SHIFT+F1
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Title Bar}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_HT_CAPTION}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 553}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} title bar;window}} Title Bar
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 The title bar is located along the top of a window.  It contains the name of the application and document.
\par To move the window, drag the title bar.  Note: You can also move dialog boxes by dragging their title bars.
\par A title bar may contain the following elements:
\par \pard\plain \s47\fi-320\li440\sa60\sl-220\slmult1\widctlpar\tqr\tx360\tx440 \f7\fs20 \{bmc hlp\\bullet.bmp\}\tab Application Control-menu button
\par \pard\plain \s49\fi-320\li760\sa60\sl-220\slmult1\widctlpar\tqr\tx680\tx760 \f7\fs20 \{bmc hlp\\bullet.bmp\}\tab Document Control-menu button
\par \{bmc hlp\\bullet.bmp\}\tab Maximize button
\par \{bmc hlp\\bullet.bmp\}\tab Minimize button
\par \{bmc hlp\\bullet.bmp\}\tab Name of the application
\par \{bmc hlp\\bullet.bmp\}\tab Name of the document
\par \{bmc hlp\\bullet.bmp\}\tab Restore button
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Scroll Bars}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} scrollbars}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 554}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} scroll bars}} Scroll bars
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 
Displayed at the right and bottom edges of the document window.  The scroll boxes inside the scroll bars indicate your vertical and horizontal location in the document.  You can use the mouse to scroll to other parts of the document.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Size command (System menu)}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_SC_SIZE}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 555}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} size}} Size command (System menu)
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 Use this command to display a four-headed arrow so you can size the active window with the arrow keys.
\par \{bml hlp\\curarw4.bmp\}
\par After the pointer changes to the four-headed arrow:
\par \pard\plain \s48\fi-440\li440\sa60\sl-220\slmult1\widctlpar\tqr\tx360\tx440 \f7\fs20 1.\tab Press one of the DIRECTION keys (left, right, up, or down arrow key) to move the pointer to the border you want to move.  
\par 2.\tab Press a DIRECTION key to move the border.
\par 3.\tab Press ENTER when the window is the size you want.
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 Note:  This command is unavailable if you maximize the window.
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 Shortcut
\par \pard\plain \fi-1080\li1440\sa60\widctlpar\tx1440 \f7\fs20 Mouse:\tab Drag the size bars at the corners or edges of the window.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Move command (Control menu)}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_SC_MOVE}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 556}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} move}} Move command (Control menu)
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 Use this command to display a four-headed arrow so you can move the active window or dialog box with the arrow keys.
\par \{bmc hlp\\curarw4.bmp\}
\par Note:  This command is unavailable if you maximize the window.
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 Shortcut
\par \pard\plain \fi-1080\li1440\sa60\widctlpar\tx1440 \f7\fs20 Keys:\tab CTRL+F7
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} System Minimize Command}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_SC_MINIMIZE}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 557}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} minimize}} Minimize command (application Control menu)
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 Use this command to reduce the Ole2View window to an icon.
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 Shortcut
\par \pard\plain \fi-1080\li1440\sa60\widctlpar\tx1440 \f7\fs20 Mouse:\tab Click the minimize icon \{bmc hlp\\scmin.bmp\} on the title bar.
\par Keys:\tab ALT+F9
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Maximize command (System menu)}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_SC_MAXIMIZE}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 558}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} maximize}} Maximize command (System menu)
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 Use this command to enlarge the active window to fill the available space.
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 Shortcut
\par \pard\plain \fi-1080\li1440\sa60\widctlpar\tx1440 \f7\fs20 Mouse:\tab Click the maximize icon \{bmc hlp\\scmax.bmp\} on the title bar; or double-click the title bar.
\par Keys:\tab CTRL+F10 enlarges a document window.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Close command (Control menus)}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_SC_CLOSE}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 559}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} close}} Close command (Control menus)
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 Use this command to close the active window or dialog box.
\par Double-clicking a Control-menu box is the same as choosing the Close command.
\par \{bml hlp\\appexit.bmp\}
\par Note:  If you have multiple windows open for a single document, the Close command on the document Control menu closes only one window at a time.  You can close all windows at once with the Close command on the File menu.
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 Shortcuts
\par \pard\plain \fi-1080\li1440\sa60\widctlpar\tx1440 \f7\fs20 Keys: \tab ALT+F4 closes the OLE 2 Object Viewer window or dialog box
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Restore command (Control menu)}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_SC_RESTORE}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 560}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} restore}} Restore command (Control menu)
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 Use this command to return the active window to its size and position before you chose the Maximize or Minimize command.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Switch to command (application Control menu)}} {\cs117\f7\fs18\up6 #
{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_SC_TASKLIST}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 561}} {\cs117\f7\fs18\up6 K
{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} switch to}} Switch to command (application Control menu)
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 Use this command to display a list of all open applications.  Use this "Task List" to switch to or close an application on the list.
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 Shortcut
\par \pard\plain \fi-1080\li1440\sa60\widctlpar\tx1440 \f7\fs20 Keys:\tab CTRL+ESC
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 Dialog Box Options
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 When you choose the Switch To command, you will be presented with a dialog box with the following options:
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 Task List
\par \pard\plain \li360\sa60\widctlpar \f7\fs20 Select the application you want to switch to or close.
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 Switch To
\par \pard\plain \li360\sa60\widctlpar \f7\fs20 Makes the selected application active.
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 End Task
\par \pard\plain \li360\sa60\widctlpar \f7\fs20 Closes the selected application.
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 Cancel
\par \pard\plain \li360\sa60\widctlpar \f7\fs20 Closes the Task List box.
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 Cascade
\par \pard\plain \li360\sa60\widctlpar \f7\fs20 Arranges open applications so they overlap and you can see each title bar.  This option does not affect applications reduced to icons.
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 Tile
\par \pard\plain \li360\sa60\widctlpar \f7\fs20 Arranges open applications into windows that do not overlap.  This option does not affect applications reduced to icons.
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 Arrange Icons
\par \pard\plain \li360\sa60\widctlpar \f7\fs20 Arranges the icons of all minimized applications across the bottom of the screen.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Next Pane Command}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_NEXT_PANE}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 562}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} next pane}} Next Pane
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 F6 of TAB Switches to the next pane. 
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Prev Pane Command}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_PREV_PANE}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 563}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} prev pane}} Prev Pane
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 Shift-F6 or Shift-TAB Switches to the previous pane. 
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} No help available on this window}} {\cs117\f7\fs18\up6 #{\footnote 
\pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_HT_NOWHERE}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 564}} {\cs117\f7\fs18\up6 K{\footnote 
\pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} no help}} No Help Available
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 No help is available for this area of the window.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} No help available}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} AFX_HIDP_default}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 565}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} No help available}} No Help Available
\par \pard\plain \li120\sa60\widctlpar \f7\fs20 No help is available for this message box.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} The Main Ole2View Window}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} main_window}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 700}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} main}} The Main Ole2View Window
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 The main Ole2View window is made up of the following parts:
\par {\uldb The Menu}{\v menu_file}
\par {\uldb The Toolbar}{\v AFX_HIDW_TOOLBAR}
\par {\uldb The Object List Pane}{\v HID_OBJECTVIEW}
\par {\uldb The Object Information Pane}{\v HID_IFACEVIEW}
\par {\uldb The Interface List Pane}{\v HID_IFACELISTVIEW}
\par {\uldb The Status Bar}{\v AFX_HIDW_STATUS_BAR}
\par \pard \li720\sa60\sl-220\slmult1\widctlpar 
\par \pard \li120\sa60\sl-220\slmult1\widctlpar \{bml hlp\\mainwnd.bmp\}
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} The Object List Pane}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_OBJECTVIEW}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 701}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} object list;objects;windows}} The Object List Pane
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 \{bmr objlist.bmp\} Ole2View's main window is divided into three panes.   The pane on the left is the {\i Object List Pane}..  The Object Lis
t Pane shows a list of all OLE objects installed in your system.   This list is generated by enumerating the CLSID keys in the registration database.
\par Each entry in the list has an icon associated with it.   These icons are described below:
\par 
\par \trowd \trgaph108\trleft612 \cellx1260\cellx7920 \pard \li120\sa120\sl-220\slmult1\widctlpar\intbl \{bmc hlp\\object.bmp\}\cell 
This object is a generic OLE 2 object.   It is not insertable in containers (i.e. it does not have the "Insertable" key in it's section in the registration database).   This type of object will not show up in the list of objects a user can insert in 
a container.
\par Examples of this type of object might include applications that support OLE 2 Automation only (such as the IDispatch Calculator sample program), or data objects that support only the IDataObject interfaces for Uniform Data Transfer.
\par The {\uldb Show NotInsertable Objects}{\v\cf13 HID_OBJECTS_SHOWNOTINSERTABLEOBJECTS} command turns the display of these components on and off.\cell \pard \widctlpar\intbl \row \trowd \trgaph108\trleft612 \cellx1260\cellx7920 \pard 
\li120\sa120\sl-220\slmult1\widctlpar\intbl \{bmc hlp\\object_I.bmp\}\cell This object is an {\i Insertable} OLE 2 object.  In otherwords, it can be inserted into a container using the Insert Objec
t command of the container application.   This type of object indicates that it is insertable by having the "Insertable" key in it's section in the registration database.
\par The standard OLE 2 "Insert Object" dialog box uses the "Insertable" key to determine whether an object should be listed or not.\cell \pard \widctlpar\intbl \row \pard \li120\sa120\sl-220\slmult1\widctlpar\intbl \{bmc obj_i10.bmp\}\cell 
This is an OLE 1.0 object. 
\par The {\uldb Show OLE 1.0 Objects}{\v\cf13 HID_OBJECTS_SHOWOLE10OBJECTS} command turns the display of these components on and off.\cell \pard \widctlpar\intbl \row \pard \li120\sa120\sl-220\slmult1\widctlpar\intbl \{bmc hlp\\automati.bmp\}\cell \pard 
\li120\sa60\sl-220\slmult1\widctlpar\intbl An OLE 2 Automation Type Library.   Double clicking on one of these will invoke the {\uldb Type Library Viewer}{\v HID_FILE_VIEWTYPELIB}.
\par Double clicking on a Type Library in the Object List Pane has the same effect as using the {\uldb View Type Library}{\v HID_FILE_VIEWTYPELIB} menu item and choosing the corresponding type library filename.\cell \pard \widctlpar\intbl \row \pard 
\li120\sa120\sl-220\slmult1\widctlpar\intbl \{bmc control.bmp\}\cell \pard \li120\sa60\sl-220\slmult1\widctlpar\intbl An OLE Custom Control (.OCX).\cell \pard \widctlpar\intbl \row \pard \li120\sa120\sl-220\slmult1\widctlpar\intbl \{bmc hlp\\containe.bmp
\}\cell \pard \li120\sa60\sl-220\slmult1\widctlpar\intbl An OLE 2 Container Application.
\par Containers that support linking to embeded objects appear in the Object List Pane with the icon to the left.   The {\uldb Show Containers}{\v\cf13 HID_OBJECTS_SHOWCONTAINERS} command turns the display of these components on and off.\cell \pard 
\widctlpar\intbl \row \trowd \trgaph108\trleft612 \cellx1260\cellx7920 \pard \li120\sa120\sl-220\slmult1\widctlpar\intbl \{bmc hlp\\question.bmp\}\cell \pard \li120\sa60\sl-220\slmult1\widctlpar\intbl 
Objects that are identified as internal to OLE 2 have a question mark icon associated with them.
\par You can  use the {\uldb Show Insternal OLE 2 Objects}{\v HID_OBJECTS_SHOWINTERNAL} command to turn the display of these objects on and off.
\par \pard \li120\sa120\sl-220\slmult1\widctlpar\intbl \cell \pard \widctlpar\intbl \row \pard \li120\sa60\sl-220\slmult1\widctlpar 
\par When running on a system that supports the 32 bit version of OLE the icons described above may also have a little "32" on them indicating a 32 bit component.
\par Note that some of the objects listed in this list are not real OLE objects; at least they are not real in the sense that they do not support IClassFactory and calling CoGetClassObject() on their class IDs fails.   These objects are used internally by OLE 
2.
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 How the Object List works
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 The Object List fills itself by enumerating the HKEY_CLASSES_ROOT\\CLSID key of the registration database using the Windows SDK API RegEnumKey().   
\par See {\uldb How Ole2View Uses The Registration Database}{\v HowRegDB} for more information on how objects are identified in the Registration Database.   
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 Showing Object Information
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 When you select an object in the object list the {\uldb Object Information Pane}{\v HID_IFACEVIEW}
 is notified and it displays all the information found in the registration database regarding the object. 
\par When you double click on an object in the Object List Pane the {\uldb Interface List Pane}{\v HID_IFACELISTVIEW} is notified.   The Interface List Pane then {\i instantiates} that object and displays a list of all interfaces implemented by the object.

\par An object remains active (the pointer Ole2View keeps for the IClassFactory interface is valid) until you click on another object in the Object List or shut Ole2View down.  You can tell that an object is active by the indicator in Ole2View's {\uldb 
status bar}{\v AFX_HIDW_STATUS_BAR}.   If the status bar reads, "Object Active" the currently selected object is active.
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 Showing Class IDs in the Object List
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 The "Show CLSIDs" command in the Objects menu, and on the toolbar, allows you to turn on and off the display of the Class IDs associated with each object in the Object List Pane.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} The Interface View Pane}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_IFACEVIEW}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 702}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} Interface;info;interfaces;windows;interface view}} The Object Information Pane
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 Ole2View's main window is divided into three panes.   The pane on the top-left is the {\b\i Object Information Pane}.
\par \{bmc objinfo.bmp\}
\par The Object Information Pane displays all the information about the currently selected OLE 2 object that can be ascertained by looking in the registration database.   For more information on what is listed here see the {\uldb 
Registering Object Applications}{\v RegisteringObjectApplications@olesdkv1.hlp} section in the OLESDKV1.HLP help file (or the OLE 2 Programmers Reference, Chapter 3).
\par Currently the information listed is 'static'; that is, Ole2View will not let you edit it.  Someday Ole2View may be enhanced to allow easy editing of all this information.   For now you can run the Registration Database Editor (REGEDIT) from the File menu.

\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} The Inteface List Pane}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HID_IFACELISTVIEW}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 703}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} window;interfaces;interface;interface list}} The Inteface List Pane
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 \{bmr ifacelst.bmp\}This window displays the list of interfaces supported by the currently selected object.   Interfaces that are supported are displayed in {\b bold text}
.  Those that are not are either not displayed at all or are in normal text (use the View All Interfaces command to change this behavior).
\par Each interface listed in the Interface List Pane has an icon assoicated with it.   The following table describes each icon:
\par \trowd \trgaph108\trleft612 \cellx1260\cellx7920 \pard \li120\sa120\sl-220\slmult1\widctlpar\intbl \{bmc hlp\\iface_c.bmp\}\cell 
This interface is implemented by the Object's "Class Factory Object".  That is, the interface pointer was returned by a call to IClassFactory::QueryInterface().
\par Often, when an object relies on the OLE 2 libraries for default implementation there will be many interfaces listed of this type.
\par Note that the display of IClassFactory Object interfaces can be turned on and off using the {\uldb Show ClassFactory Interfaces}{\v HID_INTERFACES_SHOWCFI} command.\cell \pard \widctlpar\intbl \row \trowd \trgaph108\trleft612 \cellx1260\cellx7920 \pard 
\li120\sa120\sl-220\slmult1\widctlpar\intbl \{bmc hlp\\iface_I.bmp\}\cell 
This icon indicates that the interface is implemented by the instance of the object you have selected.   That is, the interface pointer was returned by a call to IUnknown::QueryInterface(), where the IUnknown pointer was retrieved by calling IClassFactory
::CreateInstance().
\par Interfaces with this icon are the interfaces that are typically thought of as those 'implemented by your object'.\cell \pard \widctlpar\intbl \row \trowd \trgaph108\trleft612 \cellx1260\cellx7920 \pard \li120\sa120\sl-220\slmult1\widctlpar\intbl \{bmc hlp
\\na.bmp\}\cell This icon indicates that the interface is not implemented by either the object or the object's IClassFactory Object.
\par You can turn the display of non-implemented interfaces by using the {\uldb Show All Interfaces}{\v HID_VIEW_SHOWALLINTERFACES} command.\cell \pard \widctlpar\intbl \row \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 How it works
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 The Interface List Pane figures out what interfaces an object implements by first {\i instantiating }
the object, and then trying each known interface ID using QueryInterface.  That is, Ole2View calls the OLE 2 function, CoGetC
lassObject() and retrieves a ponter to that objects IClassFactory interface, then uses pIClassFactory->CreateInstance() to get a pointer to the object's IUnknown interface (pInterface).
\par Once the Interface List has a pointer to the object's IUnknown, it enumerates the HKEY_CLASSES_ROOT\\
Interfaces key in the registration database, trying each interface identifier (IID) found there by calling pIUnknown->QueryInterface().   If a call to QueryInterface is successfull, the Interface List code knows that the objec
t implements that interface.   If QueryInterface fails, the object does not implement that interface.
\par The Interface List stores any interface pointers returned by QueryInterface with it's respective item in the list box.   Thus, when you double click on a supported interface, the {\uldb Interface Viewer}{\v HIDD_IFACEDIALOG}
 has an interface pointer to work with.
\par NOTE:  An object remains active (the pointer Ole2View keeps for the IClassFactory interface is valid) until you click on another object or shut Ole2View down.  You can tell that an object is active by the indicator in Ole2View's {\uldb status bar}{\v 
AFX_HIDW_STATUS_BAR}.   If the status bar reads, "Object Active" the currently selected object is active.
\par {\b Making Ole2View See Other Interfaces}
\par Since Ole2View uses the Interfaces section of the registration database to determine what interfaces an object supports, you can make it see newly defined interfaces by adding entries to this section.
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Interface Viewer}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} HIDD_IFACEDIALOG}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 750}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} Interface Viewer;interface;}} Interface Viewer
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 When you double click on an interface in the Interface List Pane, Ole2View attempts to execute an \ldblquote Interface Viewer\rdblquote 
 for that interface.   Interface Viewers are functions exported by DLLs that take a pointer to an interface and do whatever is neccessary to display whatever information is available from that interface.
\par Ole2View includes a DLL (DEFO2V.DLL) with 2 of these Interface Viewers in it:
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 IDataObject Interface Viewer
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 \{bmc idataobj.bmp\}
\par Displays the enumeration of FORMATETC structures that the object supports for both DATADIR_GET and DATADIR_SET.
\par Allows you to call members on the IDataObject pointer to test the interface.  You can "GetData" and setup an advise link (using DAdvise).   The clipboard format used for GetData and DAdvise are determined by the currently selected clipboard format in the 
FORMATETC listbox.    The only clipboard format the the viewer currently understands is CF_TEXT.
\par You can easily add support for more clipboard formats by modifying the source code found in the DEFO2V sample directory.
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 IDispatch/ITypeInfo/TypeLib Interface Viewer
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 \{bmc idispatc.bmp\}
\par Displays the Type Information for the object.  It is essentially a typeinfo browser.   Note that the same code that is called in DEFO2V.DLL to view an IDispatch or ITypeInfo, is called when you choose the {\uldb {\*\bkmkstart WHATtext}View Type Library}{
\v {\*\bkmkstart WHATbinding}{\*\bkmkend WHATtext}HID_FILE_VIEWTYPELIB}{\*\bkmkend WHATbinding} command.
\par 
\par See also: {\uldb Ole2View Interface Viewer DLLs}{\v\cf13 InterfaceViewerDLLs}
\par \pard\plain \s1\sb60\sl-240\slmult1\keepn\widctlpar \b\f2 \page {\cs117\f7\fs18\up6 ${\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 $} Ole2View Interface Viewer DLLs}} {\cs117\f7\fs18\up6 #{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 #} InterfaceViewerDLLs}} {\cs117\f7\fs18\up6 +{\footnote \pard\plain \s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 +} 752}} {\cs117\f7\fs18\up6 K{\footnote \pard\plain 
\s121\li120\sl-220\slmult1\widctlpar \f2\fs20 {\cs117\f7\fs18\up6 K} interface viewers;o2v;dll;ole2view.ini}} Ole2View Interface Viewer DLLs
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 Ole2View is extensible in that it can call functions in DLLs to display interface information.  These DLLs are called Ole2View Interface Viewers.
\par Interface Viewers are called when you double click on an interface in the {\uldb Interface List Pane}{\v HID_IFACELISTVIEW} .
\par Ole2View comes with one Inteface Viewer DLL (DEFO2V.DLL) which contains interface viewers for IDataObject, IDispatch, ITypeInfo, and ITypeLib.  
\par {\b The source code is included to provide an example of how to implement an Interface Viewer for Ole2View, and to provide sample code for both the IDataObject and IDispatch interfaces.  See the DEFO2V sub-directory in the OLE2\\SAMPLES directory . 

\par }The Win32 version of Ole2View is an ANSI application.  However, the 32 bit version of DEFO2V (DEFO2V32) has both ANSI and 
Unicode entry points.  This allows you to use the DEFO2V DLL from within your own applications, regardless of whether your application is Unicode or ANSI based.   The ANSI versions of the functions have a "A" appended to their name (e.g. DisplayIDataObjec
tA).{\i 
\par }\pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 The "DisplayInterface" Function
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 An Ole2View Interface Viewer is a single function exported
\par from any DLL prototyped as:
\par 
\par     HRESULT WINAPI _export 
\par     DisplayInterface
\par     (
\par         HWND        hwndParent, // Ole2View's main frame wnd
\par         LPUNKNOWN   lpunk,      // Pointer to valid interface
\par         LPIID       lpiid,      // pointer to interface id
\par         LPSTR       lpszName    // Interface name
\par     \} ;
\par     
\par Your DLL should export the DisplayInterface functions by name.
\par For example, DEFO2V.DLL includes DisplayInterface functions for both IDataObject and IDispatch (DisplayIDataObject and DisplayIDispatch respectively).   They are prototyped within the DEFO2V source code as:
\par 
\par     HRESULT WINAPI _export 
\par     DisplayIDataObject( HWND hwndParent, LPDATAOBJECT lpDO, 
\par                         LPIID lpiid, LPSTR lpszName ) ;
\par 
\par     HRESULT WINAPI _export 
\par     DisplayIDispatch( HWND hwndParent, LPDISPATCH lpDisp, 
\par                       LPIID lpiid, LPSTR lpszName ) ;
\par 
\par and are included in the EXPORTS section of the DEFO2V.DEF file.
\par You can do whatevery you wish within a DisplayInterface function, as long as you follow standard Windows DLL programming rules.   The information passed to the DisplayInterface functions should be enough to allow you to do just about anything.
\par \pard\plain \s2\sb60\sa60\sl-240\slmult1\widctlpar \b\f7\fs20 The [Interface Viewers] Section Of OLE2VIEW.INI File
\par \pard\plain \li120\sa60\sl-220\slmult1\widctlpar \f7\fs20 Ole2View looks in the [Interface Viewers] section of the OLE2VIEW.INI file to determine where to find installed interface viewers.   
\par The format of an entry in the [Interface Viewers] section is:
\par 
\par <interface id>=<pathname of dll>, <displayinterface function name>
\par 
\par For example:
\par 
\par [Interface Viewers]
\par \{0000010E-0000-0000-C000-000000000046\}=defo2v32.dll,DisplayIDataObject
\par \{00020400-0000-0000-C000-000000000046\}=defo2v32.dll,DisplayIDispatch
\par 
\par If you wanted an "IOleContainer" interface viewer you would create a DLL named, say, "contain.DLL" and export the "DisplayIOleContainer" function from it.   Then the follwing line in the OLE2VIEW.INI file would enable Ole2View to find it.
\par 
\par \{0000011B-0000-0000-C000-000000000046\}=contain.dll,DisplayIOleContainer
\par 
\par Ole2View knows internally about the interface viewers in DEFO2V32.DLL.  It is not necessary to have entries for them in OLE2VIEW.INI.  However, you can override the default entries if you wish.
\par 
\par }